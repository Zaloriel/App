server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: user-service

  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        connection:
          characterEncoding: utf-8
          useUnicode: true
          charSet: UTF-8

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com

  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "service.dto"
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false

# Настройки приложения
notification:
  topics:
    user-events: user-events
  site-name: "Ваш сайт"

# Логирование
logging:
  level:
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    service: DEBUG
    controller: DEBUG
    myapp: DEBUG

# Мониторинг
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,mappings
  endpoint:
    health:
      show-details: always

---
# Конфигурация для консольного режима
spring:
  config:
    activate:
      on-profile: console
  main:
    web-application-type: none